const axios = require('axios');

(async () => {
  console.log('üöÄ –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...');
  
  const baseURL = 'http://localhost:3000';
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ CSRF —Ç–æ–∫–µ–Ω–∞
    console.log('üîê –ü–æ–ª—É—á–µ–Ω–∏–µ CSRF —Ç–æ–∫–µ–Ω–∞...');
    const csrfResponse = await axios.get(`${baseURL}/api/csrf`);
    console.log('‚úÖ CSRF —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω:', csrfResponse.status);
    
    const csrfToken = csrfResponse.data.csrfToken;
    
    // 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    console.log('üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...');
    const loginResponse = await axios.post(`${baseURL}/api/auth/login`, {
      email: 'axelencore@mail.ru',
      password: 'Ad580dc6axelencore'
    }, {
      headers: {
        'X-CSRF-Token': csrfToken,
        'Content-Type': 'application/json'
      },
      withCredentials: true
    });
    
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', loginResponse.status);
    
    // –ü–æ–ª—É—á–∞–µ–º cookies –∏–∑ –æ—Ç–≤–µ—Ç–∞
    const cookies = loginResponse.headers['set-cookie'];
    console.log('üç™ –ü–æ–ª—É—á–µ–Ω—ã cookies:', cookies ? '–î–∞' : '–ù–µ—Ç');
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üë§ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const userResponse = await axios.get(`${baseURL}/api/auth/me`, {
      headers: {
        'Cookie': cookies ? cookies.join('; ') : ''
      },
      withCredentials: true
    });
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–µ–Ω:', userResponse.status);
    console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', JSON.stringify(userResponse.data, null, 2));
    
    // 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
    console.log('üìÇ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤...');
    const projectsResponse = await axios.get(`${baseURL}/api/projects`, {
      headers: {
        'Cookie': cookies ? cookies.join('; ') : ''
      },
      withCredentials: true
    });
    
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã:', projectsResponse.status);
    console.log('üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–µ–∫—Ç–æ–≤:', projectsResponse.data.length);
    console.log('üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤:', JSON.stringify(projectsResponse.data, null, 2));
    
    // 5. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    console.log('‚ûï –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞...');
    const newProject = {
      name: `–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç API ${Date.now()}`,
      description: '–ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π API –≤—ã–∑–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
    };
    
    const createResponse = await axios.post(`${baseURL}/api/projects`, newProject, {
      headers: {
        'Cookie': cookies ? cookies.join('; ') : '',
        'X-CSRF-Token': csrfToken,
        'Content-Type': 'application/json'
      },
      withCredentials: true
    });
    
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω:', createResponse.status);
    console.log('üìù –°–æ–∑–¥–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç:', JSON.stringify(createResponse.data, null, 2));
    
    // 6. –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
    console.log('üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤...');
    const projectsAfterCreate = await axios.get(`${baseURL}/api/projects`, {
      headers: {
        'Cookie': cookies ? cookies.join('; ') : ''
      },
      withCredentials: true
    });
    
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ:', projectsAfterCreate.status);
    console.log('üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è:', projectsAfterCreate.data.length);
    
    // 7. –ò—Ç–æ–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
    console.log('\nüîç –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó:');
    if (projectsAfterCreate.data.length > projectsResponse.data.length) {
      console.log('‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!');
      console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    } else {
      console.log('‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –ü—Ä–æ–µ–∫—Ç –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω –∏–ª–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è');
    }
    
    console.log('\nüì° –°–¢–ê–¢–ò–°–¢–ò–ö–ê API:');
    console.log(`- CSRF: ${csrfResponse.status}`);
    console.log(`- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: ${loginResponse.status}`);
    console.log(`- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userResponse.status}`);
    console.log(`- –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤: ${projectsResponse.status}`);
    console.log(`- –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: ${createResponse.status}`);
    console.log(`- –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ: ${projectsAfterCreate.status}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error.message);
    if (error.response) {
      console.error('üìä –°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏:', error.response.status);
      console.error('üìã –î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:', error.response.data);
    }
  }
})();