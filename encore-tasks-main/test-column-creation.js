require('dotenv').config();
const { Client } = require('pg');

async function testColumnCreation() {
  const client = new Client({
    host: process.env.DB_HOST,
    port: process.env.DB_PORT,
    database: process.env.DB_NAME,
    user: process.env.DB_USER,
    password: process.env.DB_PASSWORD,
  });

  try {
    await client.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã columns
    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã columns:');
    const columnsStructure = await client.query(`
      SELECT column_name, data_type, is_nullable, column_default
      FROM information_schema.columns 
      WHERE table_name = 'columns' AND table_schema = 'public'
      ORDER BY ordinal_position;
    `);
    
    console.log('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã columns:');
    columnsStructure.rows.forEach(row => {
      console.log(`  ${row.column_name}: ${row.data_type} (nullable: ${row.is_nullable})`);
    });

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –¥–æ—Å–∫—É —Å–Ω–∞—á–∞–ª–∞
    console.log('\nüèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –¥–æ—Å–∫–∏...');
    const boardResult = await client.query(`
      INSERT INTO boards (name, description, project_id, created_by) 
      VALUES ($1, $2, $3, $4) 
      RETURNING *
    `, ['Test Board', 'Test Description', '45eafdb8-36cf-454b-bb4d-5c61fe773b74', 'test-user']);
    
    const board = boardResult.rows[0];
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –¥–æ—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:', board.id);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏
    console.log('\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏...');
    const columnResult = await client.query(`
      INSERT INTO columns (name, board_id, position, color, settings, created_by) 
      VALUES ($1, $2, $3, $4, $5, $6) 
      RETURNING *
    `, ['Test Column', board.id, 0, '#6B7280', '{}', 'test-user']);
    
    const column = columnResult.rows[0];
    console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ:');
    console.log('  ID:', column.id);
    console.log('  Name:', column.name);
    console.log('  Board ID:', column.board_id);
    console.log('  Position:', column.position);
    console.log('  Color:', column.color);

    // –û—á–∏—Å—Ç–∫–∞
    await client.query('DELETE FROM columns WHERE id = $1', [column.id]);
    await client.query('DELETE FROM boards WHERE id = $1', [board.id]);
    console.log('\nüßπ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error);
  } finally {
    await client.end();
  }
}

testColumnCreation();