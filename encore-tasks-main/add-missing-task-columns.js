const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
  host: process.env.DB_HOST,
  port: process.env.DB_PORT,
  database: process.env.DB_NAME,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD
});

async function addMissingColumns() {
  try {
    console.log('üîç –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü—É tasks...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ assignee_id
    const checkAssigneeId = await pool.query(`
      SELECT column_name 
      FROM information_schema.columns 
      WHERE table_name = 'tasks' AND column_name = 'assignee_id'
    `);
    
    if (checkAssigneeId.rows.length === 0) {
      console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü assignee_id...');
      await pool.query(`
        ALTER TABLE tasks 
        ADD COLUMN assignee_id UUID REFERENCES users(id)
      `);
      console.log('‚úÖ –°—Ç–æ–ª–±–µ—Ü assignee_id –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
      console.log('‚ÑπÔ∏è –°—Ç–æ–ª–±–µ—Ü assignee_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ created_by
    const checkCreatedBy = await pool.query(`
      SELECT column_name 
      FROM information_schema.columns 
      WHERE table_name = 'tasks' AND column_name = 'created_by'
    `);
    
    if (checkCreatedBy.rows.length === 0) {
      console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü created_by...');
      await pool.query(`
        ALTER TABLE tasks 
        ADD COLUMN created_by UUID REFERENCES users(id)
      `);
      console.log('‚úÖ –°—Ç–æ–ª–±–µ—Ü created_by –¥–æ–±–∞–≤–ª–µ–Ω');
    } else {
      console.log('‚ÑπÔ∏è –°—Ç–æ–ª–±–µ—Ü created_by —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
    
    // –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ reporter_id –≤ created_by –µ—Å–ª–∏ created_by –ø—É—Å—Ç–æ–π
    console.log('üîÑ –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ reporter_id –≤ created_by...');
    await pool.query(`
      UPDATE tasks 
      SET created_by = reporter_id 
      WHERE created_by IS NULL
    `);
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    console.log('\nüìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã tasks:');
    const result = await pool.query(`
      SELECT column_name, data_type, is_nullable
      FROM information_schema.columns 
      WHERE table_name = 'tasks' 
      ORDER BY ordinal_position
    `);
    
    result.rows.forEach(row => {
      console.log(`- ${row.column_name}: ${row.data_type} (nullable: ${row.is_nullable})`);
    });
    
    console.log('\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–æ–ª–±—Ü–æ–≤:', error.message);
  } finally {
    await pool.end();
  }
}

addMissingColumns();