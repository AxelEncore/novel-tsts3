const { Pool } = require('pg');
require('dotenv').config();

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
const pool = new Pool({
  host: process.env.DB_HOST || 'localhost',
  port: parseInt(process.env.DB_PORT || '5432'),
  database: process.env.DB_NAME || 'encore_tasks',
  user: process.env.DB_USER || 'postgres',
  password: process.env.DB_PASSWORD || 'postgres',
  ssl: process.env.DB_SSL === 'true' ? { rejectUnauthorized: false } : false,
});

async function addEstimatedHoursColumn() {
  const client = await pool.connect();
  
  try {
    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    console.log(`üìç –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${process.env.DB_NAME}@${process.env.DB_HOST}:${process.env.DB_PORT}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ estimated_hours
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–∞ estimated_hours –≤ —Ç–∞–±–ª–∏—Ü–µ tasks...');
    
    const checkColumnQuery = `
      SELECT column_name 
      FROM information_schema.columns 
      WHERE table_name = 'tasks' 
        AND column_name = 'estimated_hours' 
        AND table_schema = 'public'
    `;
    
    const columnExists = await client.query(checkColumnQuery);
    
    if (columnExists.rows.length > 0) {
      console.log('‚ö†Ô∏è  –°—Ç–æ–ª–±–µ—Ü estimated_hours —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ tasks');
    } else {
      console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ estimated_hours –≤ —Ç–∞–±–ª–∏—Ü—É tasks...');
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü estimated_hours
      const addColumnQuery = `
        ALTER TABLE tasks 
        ADD COLUMN estimated_hours DECIMAL(10,2)
      `;
      
      await client.query(addColumnQuery);
      console.log('‚úÖ –°—Ç–æ–ª–±–µ—Ü estimated_hours —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–∫–∂–µ —Å—Ç–æ–ª–±–µ—Ü actual_hours
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–∞ actual_hours –≤ —Ç–∞–±–ª–∏—Ü–µ tasks...');
    
    const checkActualHoursQuery = `
      SELECT column_name 
      FROM information_schema.columns 
      WHERE table_name = 'tasks' 
        AND column_name = 'actual_hours' 
        AND table_schema = 'public'
    `;
    
    const actualHoursExists = await client.query(checkActualHoursQuery);
    
    if (actualHoursExists.rows.length > 0) {
      console.log('‚ö†Ô∏è  –°—Ç–æ–ª–±–µ—Ü actual_hours —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ tasks');
    } else {
      console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ actual_hours –≤ —Ç–∞–±–ª–∏—Ü—É tasks...');
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü actual_hours
      const addActualHoursQuery = `
        ALTER TABLE tasks 
        ADD COLUMN actual_hours DECIMAL(10,2)
      `;
      
      await client.query(addActualHoursQuery);
      console.log('‚úÖ –°—Ç–æ–ª–±–µ—Ü actual_hours —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏ –≤—ã–≤–æ–¥–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã tasks
    console.log('\nüìã –¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã tasks:');
    
    const tableStructureQuery = `
      SELECT 
        column_name,
        data_type,
        is_nullable,
        column_default
      FROM information_schema.columns 
      WHERE table_name = 'tasks' 
        AND table_schema = 'public'
      ORDER BY ordinal_position
    `;
    
    const structure = await client.query(tableStructureQuery);
    
    console.log('\n| –°—Ç–æ–ª–±–µ—Ü | –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö | Nullable | –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é |');
    console.log('|---------|------------|----------|--------------|');
    
    structure.rows.forEach(row => {
      const nullable = row.is_nullable === 'YES' ? '–î–∞' : '–ù–µ—Ç';
      const defaultValue = row.column_default || 'NULL';
      console.log(`| ${row.column_name} | ${row.data_type} | ${nullable} | ${defaultValue} |`);
    });
    
    console.log('\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
    
    if (error.code) {
      console.error(`   –ö–æ–¥ –æ—à–∏–±–∫–∏ PostgreSQL: ${error.code}`);
    }
    
    if (error.detail) {
      console.error(`   –î–µ—Ç–∞–ª–∏: ${error.detail}`);
    }
    
    process.exit(1);
  } finally {
    client.release();
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
addEstimatedHoursColumn().catch(error => {
  console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
});