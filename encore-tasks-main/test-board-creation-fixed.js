const fetch = require('node-fetch');
const Database = require('better-sqlite3');
const path = require('path');

/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ—Å–æ–∫
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ:
 * 1. API –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å project_id
 * 2. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
 * 3. –î–æ—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */
async function testFixedBoardCreation() {
  try {
    console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ—Å–∫–∏...');
    
    // 1. –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const JWT_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJkMDEyYjA3OS01Nzk4LTQ5ZDUtOGNmZi0wZTFkYmVhNTgyMmUiLCJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwidGltZXN0YW1wIjoxNzU2MjgwNDEyMzU2LCJyYW5kb20iOiI0MWR4a2M2OXJxYyIsImlhdCI6MTc1NjI4MDQxMiwiZXhwIjoxNzU2ODg1MjEyfQ.QBoGB6-ToDaXTTqMh-3N-FN6n23rd0G4BCqOXBxxIPQ';
    
    // 2. –ü–æ–ª—É—á–∞–µ–º project_id –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    console.log('üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...');
    const dbPath = path.join(__dirname, 'database.sqlite');
    const db = new Database(dbPath);
    
    const projects = db.prepare('SELECT id, name FROM projects LIMIT 1').all();
    
    if (projects.length === 0) {
      throw new Error('–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤');
    }
    
    const projectId = projects[0].id;
    const projectName = projects[0].name;
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ–µ–∫—Ç: ${projectName} (ID: ${projectId})`);
    
    db.close();
    
    // 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å–∫–∏
    const testBoardData = {
      name: `–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –¥–æ—Å–∫–∞ ${Date.now()}`,
      description: '–î–æ—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–≥–∞',
      project_id: projectId // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª–µ project_id
    };
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(testBoardData, null, 2));
    
    // 4. –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
    console.log('üåê –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –∫ /api/boards...');
    
    const response = await fetch('http://localhost:3000/api/boards', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${JWT_TOKEN}`
      },
      body: JSON.stringify(testBoardData)
    });
    
    console.log(`üì® –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
    console.log(`üì® Headers:`, Object.fromEntries(response.headers.entries()));
    
    const responseData = await response.json();
    console.log('üì¶ –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(responseData, null, 2));
    
    // 5. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (response.status === 201) {
      console.log('\n‚úÖ –£–°–ü–ï–•: –î–æ—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
      if (responseData.success && responseData.data) {
        console.log('‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞');
        console.log('üìã –î–∞–Ω–Ω—ã–µ –¥–æ—Å–∫–∏:');
        console.log(`  - ID: ${responseData.data.id}`);
        console.log(`  - –ù–∞–∑–≤–∞–Ω–∏–µ: ${responseData.data.name}`);
        console.log(`  - –û–ø–∏—Å–∞–Ω–∏–µ: ${responseData.data.description}`);
        console.log(`  - –ü—Ä–æ–µ–∫—Ç ID: ${responseData.data.project_id}`);
        console.log(`  - –°–æ–∑–¥–∞–Ω–æ: ${responseData.data.created_at}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ project_id —Å–æ–≤–ø–∞–¥–∞–µ—Ç
        if (responseData.data.project_id === projectId) {
          console.log('‚úÖ project_id –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
        } else {
          console.log(`‚ùå project_id –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç: –æ–∂–∏–¥–∞–ª–∏ ${projectId}, –ø–æ–ª—É—á–∏–ª–∏ ${responseData.data.project_id}`);
        }
      } else {
        console.log('‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞');
      }
      
    } else {
      console.log('\n‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–æ—Å–∫—É');
      console.log(`–°—Ç–∞—Ç—É—Å: ${response.status}`);
      
      if (responseData.error) {
        console.log(`–û—à–∏–±–∫–∞: ${responseData.error}`);
      }
      
      if (responseData.details) {
        console.log('–î–µ—Ç–∞–ª–∏:', responseData.details);
      }
    }
    
    // 6. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - —Ç–µ—Å—Ç —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    console.log('\nüß™ –¢–µ—Å—Ç —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');
    
    const invalidBoardData = {
      name: '', // –ü—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ - –¥–æ–ª–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏
      description: '–¢–µ—Å—Ç —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏',
      project_id: projectId
    };
    
    const invalidResponse = await fetch('http://localhost:3000/api/boards', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${JWT_TOKEN}`
      },
      body: JSON.stringify(invalidBoardData)
    });
    
    console.log(`üì® –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ (–Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ): ${invalidResponse.status}`);
    
    const invalidResponseData = await invalidResponse.json();
    
    if (invalidResponse.status === 400 && invalidResponseData.error === 'Validation failed') {
      console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    } else {
      console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ');
      console.log('–û—Ç–≤–µ—Ç:', JSON.stringify(invalidResponseData, null, 2));
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    
  } catch (error) {
    console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    console.error('–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ—Å–æ–∫...\n');
testFixedBoardCreation();