const { Client } = require('pg');
const { v4: uuidv4 } = require('uuid');

const client = new Client({
  connectionString: 'postgresql://postgres:postgres@localhost:5432/encore_tasks'
});

async function createTestProject() {
  try {
    await client.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å–ø–µ—à–Ω–æ');
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
    const projectId = uuidv4();
    const userId = 'a18e90af-3374-464a-a020-d0492838eb45'; // ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    
    const result = await client.query(`
      INSERT INTO projects (id, name, description, creator_id, created_at, updated_at)
      VALUES ($1, $2, $3, $4, NOW(), NOW())
      RETURNING *
    `, [
      projectId,
      '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è',
      '–ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã',
      userId
    ]);
    
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:');
    console.log('ID:', result.rows[0].id);
    console.log('–ù–∞–∑–≤–∞–Ω–∏–µ:', result.rows[0].name);
    console.log('–û–ø–∏—Å–∞–Ω–∏–µ:', result.rows[0].description);
    console.log('–°–æ–∑–¥–∞–Ω:', result.rows[0].created_at);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–µ–∫—Ç–æ–≤
    const countResult = await client.query('SELECT COUNT(*) as count FROM projects');
    console.log('\nüìä –í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', countResult.rows[0].count);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –ø—Ä–æ–µ–∫—Ç–∞
    console.log('\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –ø—Ä–æ–µ–∫—Ç–∞:');
    const recentProjects = await client.query(`
      SELECT id, name, created_at 
      FROM projects 
      ORDER BY created_at DESC 
      LIMIT 3
    `);
    
    recentProjects.rows.forEach((project, index) => {
      console.log(`${index + 1}. ${project.name} (${project.created_at})`);
    });
    
    console.log('\nüéâ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:', error.message);
  } finally {
    await client.end();
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
  }
}

createTestProject().catch(console.error);